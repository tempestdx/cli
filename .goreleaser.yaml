# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2
project_name: tempest
before:
  hooks:
    - go mod tidy
builds:
  - binary: tempest
    main: ./tempest/main.go
    flags:
      - -trimpath
    ldflags:
      - -s -w -X github.com/tempestdx/cli/internal/version.Version={{.Version}}
    mod_timestamp: "{{ .CommitTimestamp }}"
    env:
      - CGO_ENABLED=0
    targets:
      - darwin_amd64
      - darwin_arm64
      - linux_amd64
      - linux_arm64
      - windows_amd64
      - windows_arm64

dockers:
  - image_templates:
      - "tempestdx/cli:latest-amd64"
      - "tempestdx/cli:{{ .Tag }}-amd64"
    goos: linux
    goarch: amd64
    skip_push: false
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.documentation=https://docs.tempestdx.com"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

  - image_templates:
      - "tempestdx/cli:latest-arm64"
      - "tempestdx/cli:{{ .Tag }}-arm64"
    goos: linux
    goarch: arm64
    skip_push: false
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.documentation=https://docs.tempestdx.com"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.source={{ .GitURL }}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

docker_manifests:
  - name_template: "tempestdx/cli:{{ .Tag }}"
    image_templates:
      - "tempestdx/cli:{{ .Tag }}-amd64"
      - "tempestdx/cli:{{ .Tag }}-arm64"

  - name_template: "tempestdx/cli:latest"
    image_templates:
      - "tempestdx/cli:latest-amd64"
      - "tempestdx/cli:latest-arm64"

notarize:
  macos:
    - enabled: '{{ isEnvSet "MACOS_SIGN_P12" }}'
      sign:
        certificate: "{{.Env.MACOS_SIGN_P12}}"
        password: "{{.Env.MACOS_SIGN_PASSWORD}}"
      notarize:
        issuer_id: "{{.Env.MACOS_NOTARY_ISSUER_ID}}"
        key_id: "{{.Env.MACOS_NOTARY_KEY_ID}}"
        key: "{{.Env.MACOS_NOTARY_KEY}}"

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

release:
  draft: true
  replace_existing_draft: true
  prerelease: auto

changelog:
  use: github
  sort: asc

nfpms:
  - vendor: Tempest
    description: Tempest CLI
    maintainer: Tempest CLI <support@tempestdx.com>
    homepage: https://tempestdx.com
    license: Apache-2.0
    formats:
      - apk
      - deb
      - rpm
      - archlinux

brews:
  - name: tempest
    repository:
      owner: tempestdx
      name: homebrew-tap
      token: "{{ .Env.GH_PAT }}"
    directory: Formula
    url_template: "https://github.com/tempestdx/cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    homepage: "https://tempestdx.com/"
    license: "Apache-2.0"
